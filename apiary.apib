FORMAT: 1A


# WeConnect
WeConnect provides a platform that brings businesses and individuals together. This platform creates awareness for businesses and gives the users the ability to write reviews about the businesses they have interacted with.  

## Create a New User  [/api/v1/auth/register]
You may create own account using this action. It takes a JSON
object containing user details and create an account used to login into the system
### Register New User[POST]

+ Request (application/json)

        {
            "username": "user",
            "email": "useremail@gmail.com"
            "password": "12345"
            
        }

+ Response 409 (application/json)
User sees this response when they try to register twice into the system
    + Headers
    
    + Body

            {
                "message": "User Details Exist"
               
            }

+ Response 201 (application/json)
This response is returned when the user registration has been successful
    + Headers
    
    + Body

            {
                "message": "Registration Successful"
            }
## Login a User  [/api/v1/auth/login]
You may login to your own account using this action. It takes a JSON
object containing user details and login the user into the system
### Login a User[POST]

+ Request (application/json)

        {
            "email": "user@gmail.com",
            "password": "user123"
            
        }

+ Response 409 (application/json)
User gets the responses below when they provide wrong login details during login 
    + Headers
    
    + Body

            {
                "message": "User email is not registered",
               
            }

+ Response 201 (application/json)

    + Headers
    
    + Body

            {
                "message": "Login Successful"
            }
## Reset a User Password  [/api/v1/auth/reset-password']
Logged in user  is able to reset password to get a new password.
### reset-password [POST]

+ Request (application/json)

        {
            "email": "myname",
            "newpassword": "123456"
            
        }

+ Response 409 (application/json)

    + Headers
    
    + Body

            {
                "message": "User with that email does not exist"},
               
            }

+ Response 201 (application/json)

    + Headers
    
    + Body

            {
                "message": "Reset Successful"
            }
## Logout a User  [/api/v1/auth/logout']
Logged in user  is able to logout from the system.
### Logout [POST]

User sees the message below on successful logout
+ Response 201 (application/json)

    + Headers
    
    + Body

            {
                "message": "Logout Successful"
            }
## Create a New Business  [/api/v1/auth/businesses',]
Registered and Logged in user  is able to create a new business. This endpoint accepts JSON data as request,
register the business details and return the registed business data as a dictionary.
### businesses [POST]
A sample request is shown below.
+ Request (application/json)

        {
            "name":"easyE", 
            "category":"hardware", 
            "location":"Mombasa"
            
        }

+ Response 409 (application/json)

    + Headers
    
    + Body

            {
                "message": "Business already Exist, use another name"
                
            }

+ Response 201 (application/json)

    + Headers
    
    + Body

            {
                "name":"easyE", 
                "category":"hardware", 
                "location":"Mombasa"
            }

## Get all Businesses  [/api/v1/auth/businesses']
This endpoint is used to retrieve all businesses stored in the system. User login is required.
Retrurn business objects in form of a dictionary.
### businesses [GET]

+ Response 201 (application/json)

    + Headers
    
    + Body

            {
                "name":"easyE", 
                "category":"hardware", 
                "location":"Mombasa"
            }

## Get a Businesses by ID  [/api/v1/auth/businesses/id']
This endpoint retrieves one business stored in the the system. 
Login is required and business id must be supplied in the URL
### businesses [GET]

+ Response 201 (application/json)

    + Headers
    
    + Body

            {
                "name":"easyE", 
                "category":"hardware", 
                "location":"Mombasa"
            }
## Update a Businesses by ID  [/api/v1/auth/businesses/business_id']
This endpoint enables user to make changes on one business stored in the the syatem. 
Login is required and business ID must be supplied in the URL. 
Only users who have created the business have this privilage.
It takes a JSON object containing the datails you wish to update.
### businesses [PUT]
A sample request is shown below.
+ Request (application/json)

        {
            "newname":"easyE", 
            "newcategory":"hardware", 
            "newlocation":"Mombasa"
            
        }

+ Response 409 (application/json)

    + Headers
    
    + Body

            {
                "message": "Business already Exist, use another name"
                
            }
+ Response 404 (application/json)

    + Headers
    
    + Body

            {
                "message": "Business does not exist"
                
            }
+ Response 201 (application/json)

    + Headers
    
    + Body

            {
                "message": "Business Updated" 
            }
## Delete a Businesses by ID  [/api/v1/auth/businesses/ Id']
This endpoint enables users to delete a business stored in the the system. 
Login is required and business id must be supplied in the URL. 
Only users who have created the business can delete it.

### businesses [DELETE]
Sample responces are shown below.

+ Response 409 (application/json)

    + Headers
    
    + Body

            {
                "message": "You cannot delete someones Business"
                
            }
+ Response 404 (application/json)

    + Headers
    
    + Body

            {
                "message": "Business does not exist"
                
            }
+ Response 201 (application/json)

    + Headers
    
    + Body

            {
                "message": "Business deleted" 
            }
## Add a Review for a Business  [/api/v1/auth/<int:businessid>/reviews']
Enable user to add a review to a business stored in the the system. 
Login is required and business id must be supplied in the URL. 
Users can add review to any business. Empty reiews and reviews that are too short 
are not allowed.

### businesses_id/reviews [POST]

A sample json request is shown below.
+ Request (application/json)

        {
            "description":"This is the first review for this business"
            
        }

 
+ Response 404 (application/json)

    + Headers
    
    + Body

            {
                "message": "Business with that ID does not exist"
                
            }
+ Response 201 (application/json)

    + Headers
    
    + Body

            {
                "message": "Review added Successfully"
                
            }
## Retrieve all Reviews for a Business  [/api/v1/auth/<int:businessid>/review']
Enable user to retrieve all reviews of a business stored in the the system. 
Login is required and business ID must be supplied in the URL. 
Users can see all reviews for any business.

### businesses_id/reviews [GET]
Sample responces are shown below.

+ Response 409 (application/json)

    + Headers
    
    + Body

            {
                "message": "No reviews available"
                
            }
+ Response 404 (application/json)

    + Headers
    
    + Body

            {
                "message": "No Reviews available for that Business"
                
            }
+ Response 201 (application/json)

    + Headers
    
    + Body

            {
              "Reviews": [{
                         "3": 
                         [2,"This is my first review"],
                         "4": 
                         [2,"This is my second review"]}]
             }